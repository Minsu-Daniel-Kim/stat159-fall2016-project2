library(stats)
library(car)
# Import Data
Credit <- read.csv("data/Credit.csv", header = TRUE)
Credit <- read.csv("../data/Credit.csv", header = TRUE)
Credit <- read.csv("../../data/Credit.csv", header = TRUE)
summary(Credit)
View(Credit)
Credit <- Credit[,2:12]
View(Credit)
View(Credit)
Credit$Income
quantile(Credit$Income, probs = seq(0, 1, 0.25))
min(Credit$Income)
median(Credit$Income)
hist(Credit$Income, main = "Histogram of Income", xlab = "Income")
boxplot(Credit$Income, col = "lightgray")
boxplot(Credit$Income)
boxplot(Credit$Income, col = "lightgray", main = "Boxplot of Income", xlab = "Income")
for (item in quantitative_variables) {
print(item)
}
quantitative_variables <- c("Income", "Limit", "Rating", "Cards", "")
for (item in quantitative_variables) {
print(item)
}
files <- list.files("functions/eda")
for (i in 1:length(files)) {
source(paste0("functions/eda/", files[i]))
}
files <- list.files("../functions/eda")
source(paste0("functions/eda/", files[i]))
files <- list.files("../functions/eda")
for (i in 1:length(files)) {
source(paste0("functions/eda/", files[i]))
}
files <- list.files("../functions/eda")
for (i in 1:length(files)) {
source(paste0("../functions/eda/", files[i]))
}
# Explore Quantitative Variables
quantitative_variables <- c("Income", "Limit", "Rating", "Cards", "Age", "Education", "Balance")
for (i in quantitative_variables) {
quantitative_analysis(i)
}
for (i in quantitative_variables) {
quantitative_analysis(i)
}
for (i in 1:length(files)) {
source(paste0("../functions/eda/", files[i]))
}
for (i in quantitative_variables) {
quantitative_analysis(i)
}
# Import Data
for (i in 1:length(files)) {
source(paste0("../functions/eda/", files[i]))
}
for (i in quantitative_variables) {
quantitative_analysis(i)
}
for (i in 1:length(files)) {
source(paste0("../functions/eda/", files[i]))
}
for (i in quantitative_variables) {
quantitative_analysis(i)
}
for (i in 1:length(files)) {
source(paste0("../functions/eda/", files[i]))
}
for (i in quantitative_variables) {
quantitative_analysis(i)
}
variable = time
title <- substitute(expression("Histogram of " + x), list(x = variable))
title
title <- paste("Histogram of ", variable)
title <- paste("'Histogram of ", variable, "'")
title <- paste("'Histogram of ", as.character(variable), "'")
title <- paste("'Histogram of ", deparse(expression(variable)), "'")
title
variable
variable = time
title <- paste("'Histogram of ", deparse(expression(variable)), "'")
title
variable <- Income
variable <- "Income"
Credit$variable
library(shiny)
setwd("~/Desktop")
shiny::runApp('stat159-2016fall-lab3/lab8')
setwd("~/Desktop/stat159-2016fall-lab3/lab8")
shiny::runApp()
shiny::runApp()
Advertising <- read.csv("Advertising.csv")
Advertising <- Advertising[,2:5]
View(Advertising)
View(Advertising)
names(Advertising)
names(Advertising)[1:3]
shiny::runApp()
Advertising[, c(TV, sales)]
Advertising[, c("sales")]
Advertising[, "sales"]
Advertising[, sales]
Advertising[, Sales]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
plot(Advertising$TV, Advertising$Sales)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/Desktop")
bodyfat <- read.table("bodyfat.txt")
View(bodyfat)
bodyfat <- read.table("bodyfat.txt", header = TRUE)
View(bodyfat)
lm <- lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + THIGH)
lm <- lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + THIGH, data = bodyfat)
summary(lm)
plot(lm$fitted.values, lm$residuals)
plot(lm$fitted.values, lm$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Residuals against fitted values")
plot(lm$fitted.values, rstandard(lm), xlab = "Fitted Values", ylab = "Standardized Residuals", main = "Standardized residuals against fitted values")
plot(lm$fitted.values, lm$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Residuals against fitted values")
plot(lm$fitted.values, rstandard(lm), xlab = "Fitted Values", ylab = "Standardized Residuals", main = "Standardized residuals against fitted values")
plot(rstandard(lm), lm$residuals, xlab = "Standardized Residuals", ylab = " Residuals", main = "Residuals against Standardized Residuals")
p_r <- bodyfat$BODYFAT - lm$fitted.values
lm$residuals - p_r
bodyfat <- read.table("bodyfat.txt", header = TRUE)
lm <- lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + THIGH, data = bodyfat)
leverage <- influence(lm)$hat
predicted_residuals <- lm$residuals / (1 - leverage)
plot(lm$fitted.values, lm$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Residuals against fitted values")
plot(lm$fitted.values, rstandard(lm), xlab = "Fitted Values", ylab = "Standardized Residuals", main = "Standardized residuals against fitted values")
plot(rstandard(lm), lm$residuals, xlab = "Standardized Residuals", ylab = " Residuals", main = "Residuals against Standardized Residuals")
plot(lm$fitted.values, predicted_residuals, xlab = "Fitted Values", ylab = "Predicted Residuals", main = "Predicted residuals against fitted values")
plot(predicted_residuals, lm$residuals, xlab = "Predicted Residuals", ylab = " Residuals", main = "Residuals against Predicted Residuals")
plot(leverage, lm$residuals, xlab = "Leverage", ylab = " Residuals", main = "Residuals against Leverage")
plot(rstudent(lm), predicted_residuals, xlab = "Standardized Predicted Residuals", ylab = "Predicted Residuals", main = "Predicted residuals against Standardized Predicted Residuals")
plot(rstudent(lm), rstandard(lm), xlab = "Standardized Predicted Residuals", ylab = "Standardized Residuals", main = "Standardized residuals against Standardized Predicted Residuals")
plot(1:nrow(bodyfat), cooks.distance(lm), xlab = "ID number of subjects", ylab = "Cooks Distance", main = "ooks Distance against the ID number of the subjects")
lm$coefficients
lm$coefficients[-1, 1]
lm$coefficients
lm$coefficients[1]
rep(0, 10)
install.packages("faraway")
library(faraway)
setwd("~/Desktop")
load("twoyear.Rdata")
View(data)
twoyear = data[, c('lwage','jc','univ','exper')]
View(twoyear)
View(data)
View(desc)
lm = lm(lwage ~ jc + I(jc + univ) + exper, data = twoyear)
summary(lm)$coefficients[2,4]
summary(lm)$coefficients
lm = lm(lwage ~ I(jc + univ) + jc + exper, data = twoyear)
summary(lm)$coefficients[3,4]
lm = lm(lwage ~ I(jc + univ) + univ + exper, data = twoyear)
summary(lm)$coefficients[3,4]
summary(lm)
M = lm(lwage ~ jc + univ + exper, data = twoyear)
m = lm(lwage ~ I(jc + univ) + exper, data = twoyear)
anova(m, M)
anova_r = anova(m, M)
anova_r$F
anova_r$`Pr(>F)`
anova_r$`Pr(>F)`
sumary(lm)
lm = lm(lwage ~ I(jc + univ) + univ + exper, data = twoyear)
summary(lm)[3, 3]
summary(lm)
summary(lm)[3]
result = summary(lm)
result$coefficients
summary(lm)$coefficients[3, 3]
lm = lm(lwage ~ jc + I(jc + univ) + exper, data = twoyear)
t_stat = summary(lm)$coefficients[2, 3]
t_stat
summary(lm)$coefficients[2,4]
B = 1000
t_stat_new = rep(0, B)
for (i in 1 : B) {
t_stat_new[i] = summary(lm(lwage ~ sample(jc) + I(jc + univ) + exper,
data = twoyear))$coefficients[2,3]
}
count = sum(abs(t_stat_new) >= abs(t_stat))
p_value = count / B
lm <- lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + THIGH, data = bodyfat)
plot(lm$fitted.values, lm$residuals, xlab = "Fitted Values", ylab = "Residuals", main = "Residuals against fitted values")
which(lm$fitted.values > 35)
which(lm$residuals > 14)
which(lm$residuals > 15)
which(lm$residuals > 16)
plot(lm$fitted.values, rstandard(lm), xlab = "Fitted Values", ylab = "Standardized Residuals", main = "Standardized residuals against fitted values")
lm1 = lm(BODYFAT~ AGE + WEIGHT + HEIGHT + THIGH, data = bodyfat)
standardized_res = rstandard(lm1)
p1 = qplot(lm1$fitted.values, lm1$residuals,
xlab = 'Fitted Values', ylab = 'Residuals')
library(ggplot2)
p1 = qplot(lm1$fitted.values, lm1$residuals,
xlab = 'Fitted Values', ylab = 'Residuals')
pq
p1
p2 = qplot(lm1$fitted.values, standardized_res,
xlab = 'Fitted Values', ylab = 'Standardized Residuals')
p2
plot(rstandard(lm), lm$residuals, xlab = "Standardized Residuals", ylab = " Residuals", main = "Residuals against Standardized Residuals")
which(rstandard(lm) < -3.9)
leverage <- influence(lm)$hat
leverage
plot(1:nrow(bodyfat), leverage)
predicted_residuals <- lm$residuals / (1 - leverage)
plot(lm$fitted.values, predicted_residuals, xlab = "Fitted Values", ylab = "Predicted Residuals", main = "Predicted residuals against fitted values")
which(predicted_residuals > 19)
which(predicted_residuals > 15)
plot(predicted_residuals, lm$residuals, xlab = "Predicted Residuals", ylab = " Residuals", main = "Residuals against Predicted Residuals")
which(predicted_residuals < -30)
plot(leverage, lm$residuals, xlab = "Leverage", ylab = " Residuals", main = "Residuals against Leverage")
which(leverage > 0.1)
plot(rstudent(lm), predicted_residuals, xlab = "Standardized Predicted Residuals", ylab = "Predicted Residuals", main = "Predicted residuals against Standardized Predicted Residuals")
which(rstudent(lm) < -3.9)
plot(rstudent(lm), rstandard(lm), xlab = "Standardized Predicted Residuals", ylab = "Standardized Residuals", main = "Standardized residuals against Standardized Predicted Residuals")
plot(1:nrow(bodyfat), cooks.distance(lm), xlab = "ID number of subjects", ylab = "Cooks Distance", main = "Cooks Distance against the ID number of the subjects")
which(cooks.distance(lm) > 0.3)
pt()
nrow(bodyfat)
new <- bodyfat[-1, 0]
nrow(new)
head(body)
head(bodyfat)
head(new)
new = bodyfat[-1,]
head(new)
new_model = lm(BODYFAT ~ AGE + WEIGHT + HEIGHT + THIGH,
data = new)
summary(new_model)
rstandard(new_model)
rstandard(lm)
df = 252 - 4 - 12 = 235
df = 252 - 4 - 12
p_value = sapply(rstudent(lm), function(a) 1 - pt(a, df))
plot(1:nrow(bodyfat), p_value)
sum(p_value < 0.05)
setwd("~/Desktop/stat159-2016fall-lab3/lab9")
setwd("~/Desktop/stat159-2016fall-lab3/lab9")
Credit <- read.csv("data/Credit.csv", header = TRUE)
setwd("~/Desktop/stat159-fall2016-project2/code/scripts")
Credit <- read.csv("data/Credit.csv", header = TRUE)
files <- list.files("functions/eda")
for (i in 1:length(files)) {
source(paste0("functions/eda/", files[i]))
}
# Explore Quantitative Variables
quantitative_variables <- c("Income", "Limit", "Rating", "Cards", "Age", "Education", "Balance")
for (i in quantitative_variables) {
quantitative_analysis(i)
}
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
quantitative_analysis <- function(variable) {
# Select data
data <- select(Credit, variable)
# Minimum, Maximum, Range
min(data)
max(data)
range(data)
# Median, First and Third quartiles, and interquartile range (IQR)
median(data)
quantile(data, probs = seq(0, 1, 0.25))
IQR(data)
# Mean and Standard Deviation
mean(data)
sd(data)
# Histograms and boxplots
png(paste("images/histogram-", variable, ".png"))
title <- substitute(expression("Histogram of " + x), list(x = variable))
xlab <- substitute(expression("'" + x + "'"), list(x = variable))
hist(data, main = title, xlab = xlab)
dev.off()
png(paste("images/boxplot-", variable, ".png"))
title <- substitute(expression("Boxplot of " + x), list(x = variable))
xlab <- substitute(expression(x), list(x = variable))
boxplot(data, col = "lightgray", main = title, xlab = xlab)
dev.off()
}
quantitative_analysis("Income")
select(Credit, Income)
select(Credit, "Income")
Credit$Income
select(Credit, Income)
names(Credit)
Credit <- read.csv("data/Credit.csv", header = TRUE)
Credit <- Credit[,2:12]
library(stats)
library(car)
# Import Data
Credit <- read.csv("data/Credit.csv", header = TRUE)
Credit <- Credit[,2:12]
Credit <- read.csv("data/Credit.csv", header = TRUE)
head(Credit)
setwd("~/Desktop/stat159-fall2016-project2")
Credit <- read.csv("data/Credit.csv", header = TRUE)
Credit <- Credit[,2:12]
variable <- 'Income'
col <- match(names(Credit), variable)
col
data <- select(Credit, col)
names(Credit)
col <- match(names(Credit), variable)[1]
col
data <- select(Credit, col)
data
variable = 'Limit'
col <- match(names(Credit), variable)[1]
# Select data
data <- select(Credit, col)
head(data)
data
variable = 'Limit'
col <- match(names(Credit), variable)[1]
col
col <- match(names(Credit), variable)
col
names(Credit) == variable
index(names(Credit) == variable)
which(names(Credit) == variable)
variable = 'Limit'
col <- which(names(Credit) == variable)
# Select data
data <- select(Credit, col)
head(data)
cat(c("Summary Statistics of", quant_var, "\n")
)
quant_var <- 1
cat(c("Summary Statistics of", quant_var, "\n"))
var <- cat(c("Summary Statistics of", quant_var, "\n"))
var
Credit <- read.csv("data/Credit.csv", header = TRUE)
Credit <- Credit[,2:12]
View(Credit)
table(Credit$Gender)
prop.table(Credit$Gender)
prop.table(Credit$Gender, 1)
prop.table(Credit$Gender, 2)
ftable(Credit$Gender)
table(Credit$Gender)
table(Credit$Gender) / nrow(Credit)
barplot(Credit$Gender)
barplot(Credit$Gender)
barplot(table(Credit$Gender), ylim = c(0, nrow(Credit)),
main = "table")
)
barplot(table(Credit$Gender), ylim = c(0, nrow(Credit)),
main = "table")
barplot(table(Credit$Gender), ylim = c(0, nrow(Credit)), main = "table")
barplot(table(Credit$Gender), ylim = c(0, nrow(Credit)), main = "table")
barplot(table(Credit$Gender))
variable <- "Gender"
col <- match(names(Credit), variable)[1]
data <- select(Credit, col)
head(data)
col
col <- match(names(Credit), variable)
col
col <- which(names(Credit), variable)
col <- which(names(Credit) == variable)
col
data <- select(Credit, col)
head(data)
table(data)
table(data) / nrow(Credit)
barplot(table(data), main = paste("Barplot of Frequency Table - ", variable))
barplot(c(3,4))
barplot(table(data), main = paste("Barplot of Frequency Table - ", variable))
yy <- 	barplot(table(data), main = paste("Barplot of Frequency Table - ", variable))
View(yy)
yy <- barplot(c(3,4))
yy
counts <- table(Credit$Gender)
barplot(counts)
mtcars
counts <- table(mtcars$gear)
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
variable <- "Income"
col <- which(names(Credit) == variable)
# Select data
data <- select(Credit, col)
head(data)
min(data)
max(data)
range(data)
# Median, First and Third quartiles, and interquartile range (IQR)
median(data)
head(data)
View(data)
median(data, na.rm = TRUE)
median(data, na.rm = FALSE)
summary(data)
IQR(data)
type(data)
s <- summary(data)
typeof(s)
typeof(data)
unlist(data)
variable <- "Income"
col <- which(names(Credit) == variable)
# Select data
data <- select(Credit, col)
# Unlist data
data <- unlist(data)
# Minimum, Maximum, Range
min(data)
max(data)
range(data)
# Median, First and Third quartiles, and interquartile range (IQR)
median(data, na.rm = TRUE)
quantile(data, probs = seq(0, 1, 0.25))
IQR(data)
# Mean and Standard Deviation
mean(data)
sd(data)
paste0("../../images/histogram-", variable, ".png")
paste0("../../images/histogram-", variable, ".png")
View(Credit)
library(graphics)
barplot(data, main = paste("Barplot of Frequency Table - ", variable), xlab = variable)
barplot(c(3,4))
print(barplot(c(3, 4)))
counts <- table(mtcars$gear)
counts
barplot(counts, main="Car Distribution",
xlab="Number of Gears")
